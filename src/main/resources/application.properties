# \u914D\u7F6Eshardingsphere\u771F\u5B9E\u6570\u636E\u6E90
#spring.shardingsphere.datasource.names=ds1,ds2
spring.shardingsphere.datasource.names=test

# \u4E00\u4E2A\u5B9E\u4F53\u7C7B\u5BF9\u5E94\u4E24\u5F20\u8868\uFF0C\u8986\u76D6
spring.main.allow-bean-definition-overriding=true

# \u914D\u7F6E\u7B2C 1 \u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.test.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.test.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.test.url=jdbc:mysql://localhost:3306/test
spring.shardingsphere.datasource.test.username=root
spring.shardingsphere.datasource.test.password=root

# \u914D\u7F6E\u7B2C 2 \u4E2A\u6570\u636E\u6E90
#spring.shardingsphere.datasource.ds2.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.ds2.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds2.url=jdbc:mysql://localhost:3306/course?serverTimeZone=GMT%2B8
#spring.shardingsphere.datasource.ds2.username=root
#spring.shardingsphere.datasource.ds2.password=root

# \u6307\u5B9Acourse\u8868\u5206\u5E03\u60C5\u51B5\uFF0C\u914D\u7F6E\u8868\u5728\u54EA\u4E2A\u6570\u636E\u5E93\u91CC\u9762\uFF0C\u8868\u540D\u79F0
spring.shardingsphere.sharding.tables.course.actualDataNodes=test.course_${1..2}

# \u6307\u5B9Acourse\u8868\u4E3B\u952Ecid \u751F\u6210\u7B56\u7565  SNOWFLAKE
spring.shardingsphere.sharding.tables.course.keyGenerator.column=cid
spring.shardingsphere.sharding.tables.course.keyGenerator.type=SNOWFLAKE

# \u6307\u5B9A\u5206\u7247\u7B56\u7565 cid\u5076\u6570course_1  \u5947\u6570course_2
#spring.shardingsphere.sharding.tables.course.tableStrategy.inline.shardingColumn=cid
#spring.shardingsphere.sharding.tables.course.tableStrategy.inline.algorithmExpression=course_${cid % 2 + 1}
spring.shardingsphere.sharding.tables.course.tableStrategy.inline.shardingColumn=time
spring.shardingsphere.sharding.tables.course.tableStrategy.inline.algorithmExpression=course_${time[3..3]}

# \u6307\u5B9A\u6570\u636E\u5E93\u5206\u7247\u7B56\u7565 user_id\u5076\u6570db1  \u5947\u6570db2
#spring.shardingsphere.sharding.tables.course.database-strategy.inline.shardingColumn=user_id
#spring.shardingsphere.sharding.tables.course.database-strategy.inline.algorithmExpression=db${user_id % 2 + 1}

# \u6253\u5F00sql\u8F93\u51FA\u65E5\u5FD7
spring.shardingsphere.props.sql.show=true




#\u5F00\u542Fdebug\u6A21\u5F0F\u53EF\u4EE5\u770B\u5230\u54EA\u4E9B\u7C7B\u5DF2\u7ECF\u81EA\u52A8\u88C5\u914D\u4E86
#debug=true
#server.port=8081


#spring.profiles.active=prod

#person.last-name=\u674E\u56DB
#person.age=18
#person.birth=2001/2/2
#person.bool=true
#person.list=a,b
#person.map.k1=v1
#person.map.k2=v2
#person.dog.name=ss
#person.dog.age=2

person.last-name=\u674E\u56DB${random.value}
person.age=${random.int}
person.birth=2001/2/2
person.bool=true
person.list=a,b
person.map.k1=v1
person.map.k2=v2
person.dog.name=${person.last-name}_dog
person.dog.age=2